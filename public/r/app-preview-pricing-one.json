{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "app-preview-pricing-one",
  "type": "registry:page",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority",
    "clsx",
    "lucide-react",
    "next",
    "react",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:page",
      "target": "app/preview/pricing/one/page.tsx",
      "content": "import Link from 'next/link'\nimport { Button } from '@/components/ui/button'\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Check } from 'lucide-react'\n\nexport default function Pricing() {\n    return (\n        <section className=\"py-16 md:py-32\">\n            <div className=\"mx-auto max-w-6xl px-6\">\n                <div className=\"mx-auto max-w-2xl space-y-6 text-center\">\n                    <h1 className=\"text-center text-4xl font-semibold lg:text-5xl\">Pricing that Scales with You</h1>\n                    <p>Gemini is evolving to be more than just the models. It supports an entire to the APIs and platforms helping developers and businesses innovate.</p>\n                </div>\n\n                <div className=\"mt-8 grid gap-6 md:mt-20 md:grid-cols-3\">\n                    <Card className=\"flex flex-col\">\n                        <CardHeader>\n                            <CardTitle className=\"font-medium\">Free</CardTitle>\n                            <span className=\"my-3 block text-2xl font-semibold\">$0 / mo</span>\n                            <CardDescription className=\"text-sm\">Per editor</CardDescription>\n                        </CardHeader>\n\n                        <CardContent className=\"space-y-4\">\n                            <hr className=\"border-dashed\" />\n\n                            <ul className=\"list-outside space-y-3 text-sm\">\n                                {['Basic Analytics Dashboard', '5GB Cloud Storage', 'Email and Chat Support'].map((item, index) => (\n                                    <li key={index} className=\"flex items-center gap-2\">\n                                        <Check className=\"size-3\" />\n                                        {item}\n                                    </li>\n                                ))}\n                            </ul>\n                        </CardContent>\n\n                        <CardFooter className=\"mt-auto\">\n                            <Button asChild variant=\"outline\" className=\"w-full\">\n                                <Link href=\"\">Get Started</Link>\n                            </Button>\n                        </CardFooter>\n                    </Card>\n\n                    <Card className=\"relative\">\n                        <span className=\"bg-linear-to-br/increasing absolute inset-x-0 -top-3 mx-auto flex h-6 w-fit items-center rounded-full from-purple-400 to-amber-300 px-3 py-1 text-xs font-medium text-amber-950 ring-1 ring-inset ring-white/20 ring-offset-1 ring-offset-gray-950/5\">Popular</span>\n\n                        <div className=\"flex flex-col\">\n                            <CardHeader>\n                                <CardTitle className=\"font-medium\">Pro</CardTitle>\n                                <span className=\"my-3 block text-2xl font-semibold\">$19 / mo</span>\n                                <CardDescription className=\"text-sm\">Per editor</CardDescription>\n                            </CardHeader>\n\n                            <CardContent className=\"space-y-4\">\n                                <hr className=\"border-dashed\" />\n                                <ul className=\"list-outside space-y-3 text-sm\">\n                                    {['Everything in Free Plan', '5GB Cloud Storage', 'Email and Chat Support', 'Access to Community Forum', 'Single User Access', 'Access to Basic Templates', 'Mobile App Access', '1 Custom Report Per Month', 'Monthly Product Updates', 'Standard Security Features'].map((item, index) => (\n                                        <li key={index} className=\"flex items-center gap-2\">\n                                            <Check className=\"size-3\" />\n                                            {item}\n                                        </li>\n                                    ))}\n                                </ul>\n                            </CardContent>\n\n                            <CardFooter>\n                                <Button asChild className=\"w-full\">\n                                    <Link href=\"\">Get Started</Link>\n                                </Button>\n                            </CardFooter>\n                        </div>\n                    </Card>\n\n                    <Card className=\"flex flex-col\">\n                        <CardHeader>\n                            <CardTitle className=\"font-medium\">Startup</CardTitle>\n                            <span className=\"my-3 block text-2xl font-semibold\">$29 / mo</span>\n                            <CardDescription className=\"text-sm\">Per editor</CardDescription>\n                        </CardHeader>\n\n                        <CardContent className=\"space-y-4\">\n                            <hr className=\"border-dashed\" />\n\n                            <ul className=\"list-outside space-y-3 text-sm\">\n                                {['Everything in Pro Plan', '5GB Cloud Storage', 'Email and Chat Support'].map((item, index) => (\n                                    <li key={index} className=\"flex items-center gap-2\">\n                                        <Check className=\"size-3\" />\n                                        {item}\n                                    </li>\n                                ))}\n                            </ul>\n                        </CardContent>\n\n                        <CardFooter className=\"mt-auto\">\n                            <Button asChild variant=\"outline\" className=\"w-full\">\n                                <Link href=\"\">Get Started</Link>\n                            </Button>\n                        </CardFooter>\n                    </Card>\n                </div>\n            </div>\n        </section>\n    )\n}\n",
      "path": "app/preview/pricing/one/page.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const titleToNumber = (title: string): number => {\n    const titles = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"];\n    return titles.indexOf(title.toLowerCase()) + 1;\n};",
      "path": "lib/utils.ts"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/button.tsx",
      "content": "import * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva('inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0', {\n    variants: {\n        variant: {\n            default: 'bg-radial-[at_52%_-52%] **:[text-shadow:0_1px_0_var(--color-primary)] border-primary from-primary/70 to-primary/95 text-primary-foreground inset-shadow-2xs inset-shadow-white/25 dark:inset-shadow-white dark:from-primary dark:to-primary/70 dark:hover:to-primary border text-sm shadow-md shadow-zinc-950/30 ring-0 transition-[filter] duration-200 hover:brightness-125 active:brightness-95 dark:border-0',\n            destructive: 'bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90',\n            outline: 'shadow-xs bg-linear-to-t hover:to-muted to-background from-muted dark:from-muted/50 dark:hover:to-muted/50 dark:border-border border border-zinc-300 shadow-zinc-950/10 duration-200',\n            secondary: 'bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80',\n            ghost: 'hover:bg-accent hover:text-accent-foreground',\n            link: 'text-primary underline-offset-4 hover:underline',\n        },\n        size: {\n            default: 'h-9 px-4 py-2',\n            sm: 'h-8 rounded-md px-3 text-xs',\n            lg: 'h-10 rounded-md px-8',\n            icon: 'h-9 w-9',\n        },\n    },\n    defaultVariants: {\n        variant: 'default',\n        size: 'default',\n    },\n})\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement>, VariantProps<typeof buttonVariants> {\n    asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n        <Comp\n            className={cn(buttonVariants({ variant, size, className }))}\n            ref={ref}\n            {...props}\n        />\n    )\n})\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n",
      "path": "components/ui/button.tsx"
    },
    {
      "type": "registry:ui",
      "target": "components/ui/card.tsx",
      "content": "import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Card({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card\" className={cn('bg-card text-card-foreground rounded-xl border shadow-sm', className)} {...props} />\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card-header\" className={cn('flex flex-col gap-1.5 p-6', className)} {...props} />\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card-title\" className={cn('font-semibold leading-none tracking-tight', className)} {...props} />\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card-description\" className={cn('text-muted-foreground text-sm', className)} {...props} />\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card-content\" className={cn('p-6 pt-0', className)} {...props} />\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<'div'>) {\n    return <div data-slot=\"card-footer\" className={cn('flex items-center p-6 pt-0', className)} {...props} />\n}\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
      "path": "components/ui/card.tsx"
    }
  ]
}
