{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "app-preview-logo-cloud-three",
  "type": "registry:page",
  "dependencies": [
    "clsx",
    "motion",
    "react",
    "react-use-measure",
    "tailwind-merge"
  ],
  "files": [
    {
      "type": "registry:page",
      "target": "app/preview/logo-cloud/three/page.tsx",
      "content": "import { InfiniteSlider } from '@/components/motion-primitives/infinite-slider'\nimport { ProgressiveBlur } from '@/components/motion-primitives/progressive-blur'\n\nexport default function LogoCloud() {\n    return (\n        <section className=\"bg-background overflow-hidden py-16\">\n            <div className=\"group relative m-auto max-w-7xl px-6\">\n                <div className=\"flex flex-col items-center md:flex-row\">\n                    <div className=\"md:max-w-44 md:border-r md:pr-6\">\n                        <p className=\"text-end text-sm\">Powering the best teams</p>\n                    </div>\n                    <div className=\"relative py-6 md:w-[calc(100%-11rem)]\">\n                        <InfiniteSlider\n                            speedOnHover={20}\n                            speed={40}\n                            gap={112}>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-5 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/nvidia.svg\"\n                                    alt=\"Nvidia Logo\"\n                                    height=\"20\"\n                                    width=\"auto\"\n                                />\n                            </div>\n\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-4 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/column.svg\"\n                                    alt=\"Column Logo\"\n                                    height=\"16\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-4 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/github.svg\"\n                                    alt=\"GitHub Logo\"\n                                    height=\"16\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-5 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/nike.svg\"\n                                    alt=\"Nike Logo\"\n                                    height=\"20\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-5 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/lemonsqueezy.svg\"\n                                    alt=\"Lemon Squeezy Logo\"\n                                    height=\"20\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-4 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/laravel.svg\"\n                                    alt=\"Laravel Logo\"\n                                    height=\"16\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-7 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/lilly.svg\"\n                                    alt=\"Lilly Logo\"\n                                    height=\"28\"\n                                    width=\"auto\"\n                                />\n                            </div>\n\n                            <div className=\"flex\">\n                                <img\n                                    className=\"mx-auto h-6 w-fit dark:invert\"\n                                    src=\"https://html.tailus.io/blocks/customers/openai.svg\"\n                                    alt=\"OpenAI Logo\"\n                                    height=\"24\"\n                                    width=\"auto\"\n                                />\n                            </div>\n                        </InfiniteSlider>\n\n                        <div className=\"bg-linear-to-r from-background absolute inset-y-0 left-0 w-20\"></div>\n                        <div className=\"bg-linear-to-l from-background absolute inset-y-0 right-0 w-20\"></div>\n                        <ProgressiveBlur\n                            className=\"pointer-events-none absolute left-0 top-0 h-full w-20\"\n                            direction=\"left\"\n                            blurIntensity={1}\n                        />\n                        <ProgressiveBlur\n                            className=\"pointer-events-none absolute right-0 top-0 h-full w-20\"\n                            direction=\"right\"\n                            blurIntensity={1}\n                        />\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n",
      "path": "app/preview/logo-cloud/three/page.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/motion-primitives/infinite-slider.tsx",
      "content": "'use client';\nimport { cn } from '@/lib/utils';\nimport { useMotionValue, animate, motion } from 'motion/react';\nimport { useState, useEffect } from 'react';\nimport useMeasure from 'react-use-measure';\n\nexport type InfiniteSliderProps = {\n  children: React.ReactNode;\n  gap?: number;\n  speed?: number;\n  speedOnHover?: number;\n  direction?: 'horizontal' | 'vertical';\n  reverse?: boolean;\n  className?: string;\n};\n\nexport function InfiniteSlider({\n  children,\n  gap = 16,\n  speed = 100,\n  speedOnHover,\n  direction = 'horizontal',\n  reverse = false,\n  className,\n}: InfiniteSliderProps) {\n  const [currentSpeed, setCurrentSpeed] = useState(speed);\n  const [ref, { width, height }] = useMeasure();\n  const translation = useMotionValue(0);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const [key, setKey] = useState(0);\n\n  useEffect(() => {\n    let controls;\n    const size = direction === 'horizontal' ? width : height;\n    const contentSize = size + gap;\n    const from = reverse ? -contentSize / 2 : 0;\n    const to = reverse ? 0 : -contentSize / 2;\n\n    const distanceToTravel = Math.abs(to - from);\n    const duration = distanceToTravel / currentSpeed;\n\n    if (isTransitioning) {\n      const remainingDistance = Math.abs(translation.get() - to);\n      const transitionDuration = remainingDistance / currentSpeed;\n\n      controls = animate(translation, [translation.get(), to], {\n        ease: 'linear',\n        duration: transitionDuration,\n        onComplete: () => {\n          setIsTransitioning(false);\n          setKey((prevKey) => prevKey + 1);\n        },\n      });\n    } else {\n      controls = animate(translation, [from, to], {\n        ease: 'linear',\n        duration: duration,\n        repeat: Infinity,\n        repeatType: 'loop',\n        repeatDelay: 0,\n        onRepeat: () => {\n          translation.set(from);\n        },\n      });\n    }\n\n    return controls?.stop;\n  }, [\n    key,\n    translation,\n    currentSpeed,\n    width,\n    height,\n    gap,\n    isTransitioning,\n    direction,\n    reverse,\n  ]);\n\n  const hoverProps = speedOnHover\n    ? {\n        onHoverStart: () => {\n          setIsTransitioning(true);\n          setCurrentSpeed(speedOnHover);\n        },\n        onHoverEnd: () => {\n          setIsTransitioning(true);\n          setCurrentSpeed(speed);\n        },\n      }\n    : {};\n\n  return (\n    <div className={cn('overflow-hidden', className)}>\n      <motion.div\n        className='flex w-max'\n        style={{\n          ...(direction === 'horizontal'\n            ? { x: translation }\n            : { y: translation }),\n          gap: `${gap}px`,\n          flexDirection: direction === 'horizontal' ? 'row' : 'column',\n        }}\n        ref={ref}\n        {...hoverProps}\n      >\n        {children}\n        {children}\n      </motion.div>\n    </div>\n  );\n}\n",
      "path": "components/motion-primitives/infinite-slider.tsx"
    },
    {
      "type": "registry:component",
      "target": "components/motion-primitives/progressive-blur.tsx",
      "content": "'use client';\nimport { cn } from '@/lib/utils';\nimport { HTMLMotionProps, motion } from 'motion/react';\n\nexport const GRADIENT_ANGLES = {\n  top: 0,\n  right: 90,\n  bottom: 180,\n  left: 270,\n};\n\nexport type ProgressiveBlurProps = {\n  direction?: keyof typeof GRADIENT_ANGLES;\n  blurLayers?: number;\n  className?: string;\n  blurIntensity?: number;\n} & HTMLMotionProps<'div'>;\n\nexport function ProgressiveBlur({\n  direction = 'bottom',\n  blurLayers = 8,\n  className,\n  blurIntensity = 0.25,\n  ...props\n}: ProgressiveBlurProps) {\n  const layers = Math.max(blurLayers, 2);\n  const segmentSize = 1 / (blurLayers + 1);\n\n  return (\n    <div className={cn('relative', className)}>\n      {Array.from({ length: layers }).map((_, index) => {\n        const angle = GRADIENT_ANGLES[direction];\n        const gradientStops = [\n          index * segmentSize,\n          (index + 1) * segmentSize,\n          (index + 2) * segmentSize,\n          (index + 3) * segmentSize,\n        ].map(\n          (pos, posIndex) =>\n            `rgba(255, 255, 255, ${posIndex === 1 || posIndex === 2 ? 1 : 0}) ${pos * 100}%`\n        );\n\n        const gradient = `linear-gradient(${angle}deg, ${gradientStops.join(\n          ', '\n        )})`;\n\n        return (\n          <motion.div\n            key={index}\n            className='pointer-events-none absolute inset-0 rounded-[inherit]'\n            style={{\n              maskImage: gradient,\n              WebkitMaskImage: gradient,\n              backdropFilter: `blur(${index * blurIntensity}px)`,\n            }}\n            {...props}\n          />\n        );\n      })}\n    </div>\n  );\n}\n",
      "path": "components/motion-primitives/progressive-blur.tsx"
    },
    {
      "type": "registry:lib",
      "target": "lib/utils.ts",
      "content": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport const titleToNumber = (title: string): number => {\n    const titles = [\"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\", \"twenty\"];\n    return titles.indexOf(title.toLowerCase()) + 1;\n};",
      "path": "lib/utils.ts"
    }
  ]
}
